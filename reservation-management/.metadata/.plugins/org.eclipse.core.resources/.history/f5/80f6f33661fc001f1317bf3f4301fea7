package reservationconsumer;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import reservationprovider.ReservationService;
import java.util.Scanner;

public class ReservationConsumerActivator implements BundleActivator {
    
    private Scanner scanner = new Scanner(System.in);
    
    public void start(BundleContext context) throws Exception {
        ServiceReference<?> reference = context.getServiceReference(ReservationService.class.getName());
        if (reference == null) {
            System.out.println("Reservation Service Not Found!");
            return;
        }
        
        ReservationService reservationService = (ReservationService) context.getService(reference);
        
        while (true) {
            System.out.println("\nüîπ What would you like to do?");
            System.out.println("1Ô∏è‚É£ Create a Reservation");
            System.out.println("2Ô∏è‚É£ Update a Reservation");
            System.out.println("3Ô∏è‚É£ Cancel a Reservation");
            System.out.println("4Ô∏è‚É£ Check a Reservation");
            System.out.println("5Ô∏è‚É£ Exit");
            System.out.print("Enter choice: ");
            
            int choice = scanner.nextInt();
            scanner.nextLine();
            
            if (choice == 5) break;

            System.out.print("Enter your name: ");
            String name = scanner.nextLine();
            System.out.print("Enter your phone number: ");
            String phone = scanner.nextLine();

            if (choice == 1) {
                System.out.print("Enter number of seats: ");
                int seats = scanner.nextInt();
                scanner.nextLine();
                System.out.print("Enter date (YYYY-MM-DD): ");
                String date = scanner.nextLine();
                System.out.print("Enter meal (breakfast/lunch/dinner): ");
                String meal = scanner.nextLine();
                int tableAssigned = reservationService.makeReservation(name, phone, seats, date, meal);
                System.out.println((tableAssigned != -1) ? "Reservation successful, Table: " + tableAssigned : "No available table.");
            } 
            else if (choice == 2) {
                System.out.print("Enter new number of seats: ");
                int seats = scanner.nextInt();
                scanner.nextLine();
                System.out.print("Enter new date (YYYY-MM-DD): ");
                String date = scanner.nextLine();
                System.out.print("Enter new meal (breakfast/lunch/dinner): ");
                String meal = scanner.nextLine();
                boolean updated = reservationService.updateReservation(name, phone, seats, date, meal);
                System.out.println(updated ? "Reservation updated!" : "Update failed.");
            } 
            else if (choice == 3) {
                boolean cancelled = reservationService.cancelReservation(name, phone);
                System.out.println(cancelled ? "Reservation canceled!" : "No reservation found.");
            } 
            else if (choice == 4) {
                System.out.println(reservationService.checkReservation(name, phone));
            }
        }
    }

    public void stop(BundleContext context) throws Exception {
        System.out.println("Reservation Consumer Stopped.");
    }
}
